ÝÌ
+D:\home\projects\ps-dotenv\Dotenv\Daemon.cs
	namespace 	
Dotenv
 
; 
public 
class 
Daemon 
{ 
public		 
Daemon		 
(		 
string		 
[		 
]		 
?		 
	whitelist		 "
=		# $
null		% )
,		) *
bool		+ /
enabled		0 7
=		8 9
false		: ?
,		? @
bool		A E
safe		F J
=		K L
true		M Q
,		Q R
bool		S W
quiet		X ]
=		^ _
false		` e
)		e f
{		g h
this

 
.

 
Quiet

 
=

 
quiet

 
;

 
this 
. 
_enabled 
= 
enabled 
; 
this 
. 
_safe 
= 
safe 
; 
this 
. 
_warned 
= 
new 
HashSet 
< 
string #
># $
($ %
Platform% -
.- .
StrComparer. 9
)9 :
;: ;
this 
. 
auth 
= 
new 
	Whitelist 
( 
	whitelist %
)% &
;& '
} 
public 
bool 
Async 
= 
true 
; 
private 
bool	 
_enabled 
= 
true 
; 
private 
List	 
< 
string 
> 
_names 
= 
new "
List# '
<' (
string( .
>. /
(/ 0
)0 1
{2 3
$str4 :
}; <
;< =
private 
List	 
< 

DotenvFile 
> 
_sourced "
=# $
new% (
List) -
<- .

DotenvFile. 8
>8 9
(9 :
$num: <
)< =
{> ?
}@ A
;A B
public 
bool 

SkipErrors 
= 
false 
;  
private 
Logger	 
log 
= 
new 
Logger  
(  !
)! "
;" #
private 
string	 
lastdir 
= 
$str 
; 
public 
LoggingPreference 
LoggingPreference +
{, -
get 
=> 
this	 
. 
log 
. 

Preference 
; 
set 
=> 
this	 
. 
log 
. 

Preference 
= 
value $
;$ %
} 
private 
	Whitelist	 
auth 
; 
public 
ICollection 
< 
string 
> 
AuthorizedPatterns .
=>/ 1
this2 6
.6 7
auth7 ;
.; <
Patterns< D
;D E
private   
bool  	 
_safe   
=   
true   
;   
public!! 
bool!! 
SafeMode!! 
{!! 
get"" 
=>"" 
this""	 
."" 
_safe"" 
;"" 
set## 
{## 
if$$ 
($$ 
value$$ 
!=$$ 
this$$ 
.$$ 
_safe$$ 
)$$ 
{$$ 
this%% 
.%% 	
_safe%%	 
=%% 
value%% 
;%% 
this&& 
.&& 	
Update&&	 
(&& 
this&& 
.&& 
lastdir&& 
)&& 
;&& 
}'' 
}(( 
})) 
public** 
bool** 
Quiet** 
=** 
false** 
;** 
private++ 
HashSet++	 
<++ 
string++ 
>++ 
_warned++  
;++  !
public-- 
List-- 
<-- 
string-- 
>-- 
Names-- 
{-- 
get.. 
=>.. 
this..	 
... 
_names.. 
;.. 
set// 
{// 
if00 
(00 
value00 
is00 
null00 
)00 
this00 
.00 
_names00 !
.00! "
Clear00" '
(00' (
)00( )
;00) *
else11 
this11 
.11 
_names11 
=11 
value11 
;11 
this22 
.22 
Clear22 
(22 
)22 
;22 
this33 
.33 
Update33 
(33 
this33 
.33 
lastdir33 
)33 
;33 
}44 
}55 
public77 
IList77 
<77 

DotenvFile77 
>77 
Sourced77 !
=>77" $
this77% )
.77) *
_sourced77* 2
.772 3

AsReadOnly773 =
(77= >
)77> ?
;77? @
public88 
MemBuf88 
<88 
LogEntry88 
>88 
Logs88 
=>88  
this88! %
.88% &
log88& )
.88) *
Logs88* .
;88. /
public99 
bool99 
Enabled99 
{99 
get:: 
=>:: 
this::	 
.:: 
_enabled:: 
;:: 
set;; 
{;; 
if<< 
(<< 
value<< 
)<< 
this<< 
.<< 
Enable<< 
(<< 
)<< 
;<< 
else== 
this== 
.== 
Disable== 
(== 
)== 
;== 
}>> 
}?? 
privateAA 
boolAA	 
pathIsSourcedAA 
(AA 
stringAA "
pAA# $
)AA$ %
=>AA& (
thisAA) -
.AA- .
_sourcedAA. 6
.AA6 7
ExistsAA7 =
(AA= >
xAA> ?
=>AA@ B
xAAC D
.AAD E
FilePathAAE M
.AAM N
EqualsAAN T
(AAT U
pAAU V
,AAV W
PlatformAAX `
.AA` a
StrComparisonAAa n
)AAn o
)AAo p
;AAp q
publicCC 
voidCC 
EnableCC 
(CC 
stringCC 
?CC 
pwdCC 
=CC  !
nullCC" &
)CC& '
{CC( )
pwdDD 
??=DD 	
thisDD
 
.DD 
lastdirDD 
;DD 
ifEE 
(EE 
thisEE 

.EE
 
_enabledEE 
)EE 
returnEE 
;EE 
thisFF 
.FF 
_enabledFF 
=FF 
trueFF 
;FF 
thisGG 
.GG 
UpdateGG 
(GG 
pwdGG 
)GG 
;GG 
}HH 
publicJJ 
voidJJ 
DisableJJ 
(JJ 
)JJ 
{JJ 
ifKK 
(KK 
!KK 
thisKK 
.KK 
_enabledKK 
)KK 
returnKK 
;KK 
thisLL 
.LL 
ClearLL 
(LL 
)LL 
;LL 
thisMM 
.MM 
_enabledMM 
=MM 
falseMM 
;MM 
thisNN 
.NN 
_warnedNN 
.NN 
ClearNN 
(NN 
)NN 
;NN 
}OO 
publicQQ 
voidQQ 
ClearQQ 
(QQ 
)QQ 
{QQ 
thisRR 
.RR 
_sourcedRR 
.RR 
	RemoveAllRR 
(RR 
xRR 
=>RR 
{RR  
thisSS 
.SS 
logSS 
.SS 
InfoSS 
(SS 
$strSS 
,SS 
xSS  
.SS  !
FilePathSS! )
)SS) *
;SS* +
xTT 
.TT 
UnsourceTT 
(TT 
)TT 
;TT 
returnUU 	
trueUU
 
;UU 
}VV 
)VV 
;VV 
thisWW 
.WW 
_warnedWW 
.WW 
ClearWW 
(WW 
)WW 
;WW 
}XX 
publicZZ 
voidZZ 
UpdateZZ 
(ZZ 
stringZZ 
pwdZZ 
)ZZ 
{ZZ  !
this[[ 
.[[ 
log[[ 

.[[
 
Debug[[ 
([[ 
$"[[ 
$str[[ $
{[[$ %
pwd[[% (
}[[( )
"[[) *
)[[* +
;[[+ ,
if\\ 
(\\ 
String\\ 
.\\ 
IsNullOrEmpty\\ 
(\\ 
pwd\\ 
)\\ 
)\\ 
return\\  &
;\\& '
this]] 
.]] 
lastdir]] 
=]] 
pwd]] 
;]] 
if^^ 
(^^ 
!^^ 
this^^ 
.^^ 
_enabled^^ 
||^^ 
this^^ 
.^^ 
_names^^ #
.^^# $
Count^^$ )
==^^* ,
$num^^- .
)^^. /
{^^0 1
this__ 
.__ 
log__ 
.__ 
Debug__ 
(__ 
$str__ V
)__V W
;__W X
return`` 	
;``	 

}aa 
thiscc 
.cc 
_sourcedcc 
.cc 
	RemoveAllcc 
(cc 
xcc 
=>cc 
{cc  
ifdd 
(dd 
pwddd 

.dd
 

StartsWithdd 
(dd 
xdd 
.dd 
Rootdd 
,dd 
Platformdd &
.dd& '
StrComparisondd' 4
)dd4 5
)dd5 6
returndd7 =
falsedd> C
;ddC D
thisee 
.ee 
logee 
.ee 
Debugee 
(ee 
$"ee 
$stree 
{ee  
xee  !
.ee! "
FilePathee" *
}ee* +
"ee+ ,
)ee, -
;ee- .
xff 
.ff 
Unsourceff 
(ff 
)ff 
;ff 
returngg 	
truegg
 
;gg 
}hh 
)hh 
;hh 
thisjj 
.jj 
_warnedjj 
.jj 
RemoveWherejj 
(jj 
xjj 
=>jj 
{jj  !
varkk 
parentkk 
=kk 
Pathkk 
.kk 
GetDirectoryNamekk %
(kk% &
xkk& '
)kk' (
;kk( )
returnll 	
!ll
 
pwdll 
.ll 

StartsWithll 
(ll 
parentll  
,ll  !
Platformll" *
.ll* +
StrComparisonll+ 8
)ll8 9
;ll9 :
}mm 
)mm 
;mm 
varoo 
filesoo 
=oo 
thisoo 
.oo 
findEnvFilesoo 
(oo  
pwdoo  #
,oo# $
trueoo% )
)oo) *
;oo* +
thispp 
.pp 
sourceFilespp 
(pp 
filespp 
)pp 
;pp 
}qq 
privatess 
Listss	 
<ss 
stringss 
>ss 
findEnvFilesss "
(ss" #
stringss# )
pwdss* -
,ss- .
boolss/ 3
ignoreSourcedss4 A
)ssA B
{ssC D
vartt 
filestt 
=tt 
newtt 
Listtt 
<tt 
stringtt 
>tt 
(tt 
$numtt !
)tt! "
{tt# $
}tt% &
;tt& '
varuu 
diruu 	
=uu
 
pwduu 
;uu 
whileww 
(ww 	
trueww	 
)ww 
{ww 
foreachxx 

(xx 
varxx 
namexx 
inxx 
thisxx 
.xx 
_namesxx #
)xx# $
{xx% &
varyy 
filepathyy 
=yy 
Pathyy 
.yy 
Joinyy 
(yy 
diryy  
,yy  !
nameyy" &
)yy& '
;yy' (
ifzz 
(zz 
Filezz 
.zz 
Existszz 
(zz 
filepathzz 
)zz 
&&zz  
(zz! "
!zz" #
ignoreSourcedzz# 0
||zz1 3
!zz4 5
thiszz5 9
.zz9 :
pathIsSourcedzz: G
(zzG H
filepathzzH P
)zzP Q
)zzQ R
)zzR S
files{{ 

.{{
 
Add{{ 
({{ 
filepath{{ 
){{ 
;{{ 
}|| 
if~~ 
(~~ 
string~~ 
.~~ 
IsNullOrEmpty~~ 
(~~ 
dir~~ 
)~~  
||~~! #
dir~~$ '
.~~' (
EndsInSeparator~~( 7
(~~7 8
)~~8 9
)~~9 :
break~~; @
;~~@ A
else 
dir 
= 
Path 
. 
GetDirectoryName #
(# $
dir$ '
)' (
;( )
}
 
return
 
files
	 
;
 
}
 
public
 
List
 
<
 
string
 
>
 
FindEnvFiles
 !
(
! "
string
" (
pwd
) ,
)
, -
=>
. 0
this
1 5
.
5 6
findEnvFiles
6 B
(
B C
pwd
C F
,
F G
false
H M
)
M N
;
N O
private
 
void
	 
sourceFiles
 
(
 
List
 
<
 
string
 %
>
% &
files
' ,
)
, -
{
. /
if
 
(
 
files
 
is
 
null
 
||
 
files
 
.
 
Count
 "
==
# %
$num
& '
)
' (
return
) /
;
/ 0
var
 
warned
 
=
 
false
 
;
 
foreach
 	
(

 
var
 
f
 
in
 
files
 
)
 
{
 
if
 
(
 
this
 
.
 
_safe
 
&&
 
!
 
this
 
.
 
auth
 
.
  
IsMatch
  '
(
' (
f
( )
)
) *
)
* +
{
, -
if
 
(
 
!
 	
this
	 
.
 
Quiet
 
&&
 
this
 
.
 
_warned
 #
.
# $
Add
$ '
(
' (
f
( )
)
) *
)
* +
{
, -
this
 	
.
	 

log

 
.
 
Info
 
(
 
$str
 H
,
H I
f
J K
)
K L
;
L M
warned
 
=
 
true
 
;
 
System
 
.
 
Console
 
.
 
	WriteLine
 
(
 
$"
  
$str
  -
{
- .
f
. /
}
/ 0
$str0 
" 
) 
; 
}
 
continue
 
;
 
}
 
try
 
{
 
this
 
.
 	
log
	 
.
 
Info
 
(
 
$str
 !
,
! "
f
# $
)
$ %
;
% &
var
 
data
 
=
 
File
 
.
 
ReadAllText
 
(
  
f
  !
)
! "
;
" #
var
 
entries
 
=
 
new
 
List
 
<
 
Entry
  
>
  !
(
! "
)
" #
;
# $
var
 
err
 
=
 
false
 
;
 
foreach
 
(
 
var
 
res
 
in
 
new
 
Parser
 "
(
" #
data
# '
)
' (
)
( )
{
* +
if
 
(
 	
res
	 
.
 
IsErr
 
)
 
{
 
this
 

.

 
log
 
.
 
Error
 
(
 
$"
 
$str
 $
{
$ %
res
% (
.
( )
Err
) ,
}
, -
"
- .
,
. /
f
0 1
)
1 2
;
2 3
if
 
(
	 

!

 
this
 
.
 

SkipErrors
 
)
 
{
 
err
 

=
 
true
 
;
 
break
 
;
 
}
 
}
   
else
   
{
   
entries
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
res
¡¡ 
.
¡¡ 
Ok
¡¡ 
)
¡¡ 
;
¡¡ 
}
¢¢ 
}
££ 
if
¤¤ 
(
¤¤ 
err
¤¤ 
||
¤¤ 
entries
¤¤ 
.
¤¤ 
Count
¤¤ 
==
¤¤ 
$num
¤¤  !
)
¤¤! "
continue
¤¤# +
;
¤¤+ ,
try
¦¦ 
{
¦¦ 	
this
§§ 	
.
§§	 

_sourced
§§
 
.
§§ 
Add
§§ 
(
§§ 
new
§§ 

DotenvFile
§§ %
(
§§% &
f
§§& '
,
§§' (
entries
§§) 0
)
§§0 1
)
§§1 2
;
§§2 3
}
¨¨ 
catch
¨¨ 
(
¨¨ 
VarUnsetException
¨¨ 
e
¨¨  
)
¨¨  !
{
¨¨" #
this
©© 	
.
©©	 

log
©©
 
.
©© 
Error
©© 
(
©© 
e
©© 
.
©© 
ToString
©© 
(
©© 
)
©©  
,
©©  !
f
©©" #
)
©©# $
;
©©$ %
}
ªª 
}
«« 
catch
«« 

(
«« 
	Exception
«« 
e
«« 
)
«« 
{
«« 
this
¬¬ 
.
¬¬ 	
log
¬¬	 
.
¬¬ 
	Exception
¬¬ 
(
¬¬ 
e
¬¬ 
,
¬¬ 
f
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 
}
®® 
if
°° 
(
°° 
warned
°° 
)
°° 
System
°° 
.
°° 
Console
°° 
.
°° 
	WriteLine
°° &
(
°°& '
$str
°°' i
)
°°i j
;
°°j k
}
±± 
public
³³ 
bool
³³ 
AddName
³³ 
(
³³ 
string
³³ 
name
³³  
)
³³  !
{
³³" #
if
´´ 
(
´´ 
this
´´ 

.
´´
 
_names
´´ 
.
´´ 
Exists
´´ 
(
´´ 
x
´´ 
=>
´´ 
x
´´ 
.
´´  
Equals
´´  &
(
´´& '
name
´´' +
,
´´+ ,
Platform
´´- 5
.
´´5 6
StrComparison
´´6 C
)
´´C D
)
´´D E
)
´´E F
return
´´G M
false
´´N S
;
´´S T
foreach
µµ 	
(
µµ
 
var
µµ 
c
µµ 
in
µµ 
Path
µµ 
.
µµ %
GetInvalidFileNameChars
µµ 0
(
µµ0 1
)
µµ1 2
)
µµ2 3
{
µµ4 5
if
¶¶ 
(
¶¶ 
name
¶¶ 
.
¶¶ 
Contains
¶¶ 
(
¶¶ 
c
¶¶ 
)
¶¶ 
)
¶¶ 
throw
¶¶ 
new
¶¶ "
ArgumentException
¶¶# 4
(
¶¶4 5
$str¶¶5 
,¶¶ 
$str¶¶ 
)¶¶ 
;¶¶ 
}
·· 
this
¸¸ 
.
¸¸ 
_names
¸¸ 
.
¸¸ 
Add
¸¸ 
(
¸¸ 
name
¸¸ 
)
¸¸ 
;
¸¸ 
this
¹¹ 
.
¹¹ 
Clear
¹¹ 
(
¹¹ 
)
¹¹ 
;
¹¹ 
this
ºº 
.
ºº 
Update
ºº 
(
ºº 
this
ºº 
.
ºº 
lastdir
ºº 
)
ºº 
;
ºº 
return
»» 
true
»»	 
;
»» 
}
¼¼ 
public
¾¾ 
bool
¾¾ 

RemoveName
¾¾ 
(
¾¾ 
string
¾¾ 
name
¾¾ #
)
¾¾# $
{
¾¾% &
var
¿¿ 
n
¿¿ 
=
¿¿ 	
this
¿¿
 
.
¿¿ 
_names
¿¿ 
.
¿¿ 
	RemoveAll
¿¿ 
(
¿¿  
x
¿¿  !
=>
¿¿" $
x
¿¿% &
.
¿¿& '
Equals
¿¿' -
(
¿¿- .
name
¿¿. 2
,
¿¿2 3
Platform
¿¿4 <
.
¿¿< =
StrComparison
¿¿= J
)
¿¿J K
)
¿¿K L
;
¿¿L M
if
ÀÀ 
(
ÀÀ 
n
ÀÀ 
==
ÀÀ 

$num
ÀÀ 
)
ÀÀ 
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
this
ÁÁ 
.
ÁÁ 
Clear
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
this
ÂÂ 
.
ÂÂ 
Update
ÂÂ 
(
ÂÂ 
this
ÂÂ 
.
ÂÂ 
lastdir
ÂÂ 
)
ÂÂ 
;
ÂÂ 
return
ÃÃ 
true
ÃÃ	 
;
ÃÃ 
}
ÄÄ 
public
ÆÆ 
bool
ÆÆ 
AuthorizePattern
ÆÆ 
(
ÆÆ 
string
ÆÆ $
path
ÆÆ% )
,
ÆÆ) *
bool
ÆÆ+ /
update
ÆÆ0 6
=
ÆÆ7 8
false
ÆÆ9 >
)
ÆÆ> ?
{
ÆÆ@ A
var
ÇÇ 
fullpath
ÇÇ 
=
ÇÇ 
Path
ÇÇ 
.
ÇÇ 
GetFullPath
ÇÇ !
(
ÇÇ! "
path
ÇÇ" &
)
ÇÇ& '
;
ÇÇ' (
var
ÈÈ 
ok
ÈÈ 
=
ÈÈ	 

this
ÈÈ 
.
ÈÈ 
auth
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ 
fullpath
ÈÈ !
)
ÈÈ! "
;
ÈÈ" #
this
ÉÉ 
.
ÉÉ 
_warned
ÉÉ 
.
ÉÉ 
Remove
ÉÉ 
(
ÉÉ 
fullpath
ÉÉ 
)
ÉÉ 
;
ÉÉ  
if
ÊÊ 
(
ÊÊ 
ok
ÊÊ 
&&
ÊÊ	 
this
ÊÊ 
.
ÊÊ 
SafeMode
ÊÊ 
)
ÊÊ 
{
ÊÊ 
this
ËË 
.
ËË 
Update
ËË 
(
ËË 
this
ËË 
.
ËË 
lastdir
ËË 
)
ËË 
;
ËË 
}
ÌÌ 
return
ÍÍ 
ok
ÍÍ	 
;
ÍÍ 
}
ÎÎ 
public
ÐÐ 
bool
ÐÐ  
UnauthorizePattern
ÐÐ 
(
ÐÐ  
string
ÐÐ  &
path
ÐÐ' +
,
ÐÐ+ ,
bool
ÐÐ- 1
update
ÐÐ2 8
=
ÐÐ9 :
false
ÐÐ; @
)
ÐÐ@ A
{
ÐÐB C
var
ÑÑ 
fullpath
ÑÑ 
=
ÑÑ 
Path
ÑÑ 
.
ÑÑ 
GetFullPath
ÑÑ !
(
ÑÑ! "
path
ÑÑ" &
)
ÑÑ& '
;
ÑÑ' (
var
ÒÒ 
ok
ÒÒ 
=
ÒÒ	 

this
ÒÒ 
.
ÒÒ 
auth
ÒÒ 
.
ÒÒ 
Remove
ÒÒ 
(
ÒÒ 
fullpath
ÒÒ $
)
ÒÒ$ %
;
ÒÒ% &
if
ÓÓ 
(
ÓÓ 
ok
ÓÓ 
&&
ÓÓ	 
this
ÓÓ 
.
ÓÓ 
SafeMode
ÓÓ 
&&
ÓÓ 
update
ÓÓ #
)
ÓÓ# $
{
ÓÓ% &
this
ÔÔ 
.
ÔÔ 
Update
ÔÔ 
(
ÔÔ 
this
ÔÔ 
.
ÔÔ 
lastdir
ÔÔ 
)
ÔÔ 
;
ÔÔ 
}
ÕÕ 
return
ÖÖ 
ok
ÖÖ	 
;
ÖÖ 
}
×× 
public
ÙÙ 
bool
ÙÙ  
AuthorizeDirectory
ÙÙ 
(
ÙÙ  
string
ÙÙ  &
dir
ÙÙ' *
,
ÙÙ* +
bool
ÙÙ, 0
update
ÙÙ1 7
=
ÙÙ8 9
false
ÙÙ: ?
)
ÙÙ? @
{
ÙÙA B
var
ÚÚ 
fullpath
ÚÚ 
=
ÚÚ 
Path
ÚÚ 
.
ÚÚ 
GetFullPath
ÚÚ !
(
ÚÚ! "
dir
ÚÚ" %
)
ÚÚ% &
;
ÚÚ& '
var
ÛÛ 
ok
ÛÛ 
=
ÛÛ	 

this
ÛÛ 
.
ÛÛ 
auth
ÛÛ 
.
ÛÛ 
AddDir
ÛÛ 
(
ÛÛ 
fullpath
ÛÛ $
)
ÛÛ$ %
;
ÛÛ% &
if
ÜÜ 
(
ÜÜ 
ok
ÜÜ 
&&
ÜÜ	 
update
ÜÜ 
)
ÜÜ 
this
ÜÜ 
.
ÜÜ 
Update
ÜÜ 
(
ÜÜ  
this
ÜÜ  $
.
ÜÜ$ %
lastdir
ÜÜ% ,
)
ÜÜ, -
;
ÜÜ- .
return
ÝÝ 
ok
ÝÝ	 
;
ÝÝ 
}
ÞÞ 
}ßß ±/
/D:\home\projects\ps-dotenv\Dotenv\DotenvFile.cs
	namespace 	
Dotenv
 
; 
public 
readonly 
struct 
EnvVar 
{ 
public 
string 
Name 
{ 
get 
; 
} 
public 
string 
Value 
{ 
get 
; 
} 
public 
string 
Replaced 
{ 
get 
; 
}  
public		 
EnvVar		 
(		 
string		 
name		 
,		 
string		 "
val		# &
,		& '
string		( .
replaced		/ 7
)		7 8
=>		9 ;
(		< =
this		= A
.		A B
Name		B F
,		F G
this		H L
.		L M
Value		M R
,		R S
this		T X
.		X Y
Replaced		Y a
)		a b
=		c d
(		e f
name		f j
,		j k
val		l o
,		o p
replaced		q y
)		y z
;		z {
public 
override 
string 
ToString  
(  !
)! "
=># %
$"& (
{( )
this) -
.- .
Name. 2
}2 3
$str3 6
{6 7
this7 ;
.; <
Value< A
}A B
"B C
;C D
internal 	
void
 
unset 
( 
) 
=> 
Environment %
.% &"
SetEnvironmentVariable& <
(< =
this= A
.A B
NameB F
,F G
thisH L
.L M
ReplacedM U
)U V
;V W
} 
public 
class 

DotenvFile 
{ 
public 
string 
FilePath 
{ 
get 
; 
internal '
set( +
;+ ,
}- .
public 
string 
Name 
{ 
get 
; 
internal #
set$ '
;' (
}) *
public 
string 
Root 
{ 
get 
; 
internal #
set$ '
;' (
}) *
List 
< 
EnvVar 
> 
_vars 
; 
public 
IList 
< 
EnvVar 
> 
Vars 
=> 
this "
." #
_vars# (
.( )

AsReadOnly) 3
(3 4
)4 5
;5 6
internal 	

DotenvFile
 
( 
string 
path  
,  !
List" &
<& '
Entry' ,
>, -
entries. 5
)5 6
{7 8
this 
. 
FilePath 
= 
path 
; 
this 
. 
Root 
= 
Path 
. 
GetDirectoryName #
(# $
path$ (
)( )
;) *
this 
. 
Name 
= 
Path 
. 
GetFileName 
( 
path #
)# $
;$ %
this 
. 
_vars 
= 
new 
List 
< 
EnvVar 
> 
(  
entries  '
.' (
Count( -
)- .
{/ 0
}1 2
;2 3
try 
{ 
foreach 

( 
var 
e 
in 
entries 
) 
{ 
var 
replaced 
= 
Environment 
. "
GetEnvironmentVariable 5
(5 6
e6 7
.7 8
Name8 <
)< =
;= >
var   
expanded   
=   
e   
.   
ExpandValue    
(    !
)  ! "
;  " #
Environment!! 
.!! "
SetEnvironmentVariable!! &
(!!& '
e!!' (
.!!( )
Name!!) -
,!!- .
expanded!!/ 7
)!!7 8
;!!8 9
this"" 
."" 	
_vars""	 
."" 
Add"" 
("" 
new"" 
EnvVar"" 
("" 
e"" 
.""  
Name""  $
,""$ %
expanded""& .
,"". /
replaced""0 8
)""8 9
)""9 :
;"": ;
}## 
}$$ 
catch$$ 	
($$
 
VarUnsetException$$ 
e$$ 
)$$ 
{$$  !
for%% 
(%% 
var%% 
i%% 
=%% 
this%% 
.%% 
_vars%% 
.%% 
Count%%  
-%%! "
$num%%# $
;%%$ %
i%%& '
>=%%( *
$num%%+ ,
;%%, -
i%%. /
--%%/ 1
)%%1 2
{%%3 4
this&& 
.&& 	
_vars&&	 
[&& 
i&& 
]&& 
.&& 
unset&& 
(&& 
)&& 
;&& 
}'' 
throw(( 
e((	 

;((
 
})) 
}** 
internal,, 	
void,,
 
Unsource,, 
(,, 
),, 
{,, 
foreach-- 	
(--
 
var-- 
v-- 
in-- 
this-- 
.-- 
_vars-- 
)-- 
{--  !
v.. 
... 
unset.. 

(..
 
).. 
;.. 
}// 
}00 
}11 =
5D:\home\projects\ps-dotenv\Dotenv\Logging\LogEntry.cs
	namespace 	
Dotenv
 
. 
Logging 
; 
public 
enum 
LogType 
{ 
	Exception 

,
 
Error 
, 
Warning 
, 	
Info 
, 
Debug 
, 
}		 
public 
readonly 
struct 
LogEntry 
{  !
public 
string 
Message 
{ 
get 
; 
} 
public 
LogType 
Type 
{ 
get 
; 
} 
public 
string 
? 
Source 
{ 
get 
; 
} 
public 
LogEntry 
( 
string 
msg 
, 
LogType $
t% &
,& '
string( .
?. /
src0 3
=4 5
null6 :
): ;
=>< >
(? @
this@ D
.D E
MessageE L
,L M
thisN R
.R S
TypeS W
,W X
thisY ]
.] ^
Source^ d
)d e
=f g
(h i
msgi l
,l m
tn o
,o p
srcq t
)t u
;u v
public 
static 
LogEntry 
Error 
( 
string $
msg% (
,( )
string* 0
?0 1
src2 5
=6 7
null8 <
)< =
=>> @
newA D
LogEntryE M
(M N
msgN Q
,Q R
LogTypeS Z
.Z [
Error[ `
,` a
srcb e
)e f
;f g
public 
static 
LogEntry 
Warn 
( 
string #
msg$ '
,' (
string) /
?/ 0
src1 4
=5 6
null7 ;
); <
=>= ?
new@ C
LogEntryD L
(L M
msgM P
,P Q
LogTypeR Y
.Y Z
WarningZ a
,a b
srcc f
)f g
;g h
public 
static 
LogEntry 
Info 
( 
string #
msg$ '
,' (
string) /
?/ 0
src1 4
=5 6
null7 ;
); <
=>= ?
new@ C
LogEntryD L
(L M
msgM P
,P Q
LogTypeR Y
.Y Z
InfoZ ^
,^ _
src` c
)c d
;d e
public 
static 
LogEntry 
Debug 
( 
string $
msg% (
,( )
string* 0
?0 1
src2 5
=6 7
null8 <
)< =
=>> @
newA D
LogEntryE M
(M N
msgN Q
,Q R
LogTypeS Z
.Z [
Debug[ `
,` a
srcb e
)e f
;f g
public 
static 
LogEntry 
	Exception !
(! "
	Exception" +
e, -
,- .
string/ 5
?5 6
src7 :
=; <
null= A
)A B
=>C E
newF I
LogEntryJ R
(R S
eS T
.T U
ToStringU ]
(] ^
)^ _
,_ `
LogTypea h
.h i
	Exceptioni r
,r s
srct w
)w x
;x y
public 
override 
string 
ToString  
(  !
)! "
{# $
var 
kind 

= 
this 
. 
Type 
switch 
{ 
LogType 

.
 
	Exception 
=> 
$str #
,# $
LogType 

.
 
Error 
=> 
$str 
, 
LogType 

.
 
Warning 
=> 
$str 
,  
LogType 

.
 
Info 
=> 
$str 
, 
LogType 

.
 
Debug 
=> 
$str 
, 
_ 
=> 
$str 
, 
}   
;   
if"" 
("" 
string"" 
."" 
IsNullOrEmpty"" 
("" 
this"" 
.""  
Source""  &
)""& '
)""' (
return"") /
$"""0 2
$str""2 3
{""3 4
kind""4 8
}""8 9
$str""9 ;
{""; <
this""< @
.""@ A
Message""A H
}""H I
"""I J
;""J K
else## 
return## 
$"## 
$str## 
{## 
kind## 
}## 
$str## 
{## 
this## 
.## 
Message## &
}##& '
$str##' 1
{##1 2
this##2 6
.##6 7
Source##7 =
}##= >
"##> ?
;##? @
}%% 
}&& 
public(( 
class(( 
LoggingPreference(( 
{((  
public)) 
bool)) 
Error)) 
;)) 
public** 
bool** 
Warning** 
;** 
public++ 
bool++ 
Info++ 
;++ 
public,, 
bool,, 
Debug,, 
;,, 
public-- 
bool-- 
	Exception-- 
;-- 
public// 
static// 
LoggingPreference//  
Default//! (
(//( )
)//) *
=>//+ -
new//. 1
LoggingPreference//2 C
{//D E
Error00 
=00 	
true00
 
,00 
Warning11 	
=11
 
true11 
,11 
Info22 
=22 
false22	 
,22 
Debug33 
=33 	
false33
 
,33 
	Exception44 
=44 
true44 
}55 
;55 
public77 
bool77 
Filter77 
(77 
LogType77 
t77 
)77 
{77  
switch88 
(88	 

t88
 
)88 
{88 
case99 
LogType99 
.99 
Error99 
when99 
this99 
.99  
Error99  %
:99% &
case:: 
LogType:: 
.:: 
Warning:: 
when:: 
this:: !
.::! "
Warning::" )
:::) *
case;; 
LogType;; 
.;; 
Info;; 
when;; 
this;; 
.;; 
Info;; #
:;;# $
case<< 
LogType<< 
.<< 
Debug<< 
when<< 
this<< 
.<<  
Debug<<  %
:<<% &
case== 
LogType== 
.== 
	Exception== 
when== 
this== #
.==# $
	Exception==$ -
:==- .
return>> 

true>> 
;>> 
default?? 

:??
 
return@@ 

false@@ 
;@@ 
}AA 
}BB 
}CC Ù'
3D:\home\projects\ps-dotenv\Dotenv\Logging\Logger.cs
	namespace 	
Dotenv
 
. 
Logging 
; 
public 
class 
Logger 
{ 
private 
MemBuf	 
< 
LogEntry 
> 
_logs 
=  !
new" %
MemBuf& ,
<, -
LogEntry- 5
>5 6
(6 7
$num7 9
)9 :
;: ;
public 
LoggingPreference 

Preference $
=% &
LoggingPreference' 8
.8 9
Default9 @
(@ A
)A B
;B C
public 
MemBuf 
< 
LogEntry 
> 
Logs 
{ 
get		 
=>		 
this			 
.		 
_logs		 
;		 
set

 
{

 
if 
( 
value 
is 
null 
) 
this 
. 
_logs  
.  !
Clear! &
(& '
)' (
;( )
else 
this 
. 
_logs 
= 
value 
; 
} 
} 
public 
Logger 
( 
) 
{ 
} 
public 
uint 
MaxSize 
{ 
get 
=> 
this	 
. 
_logs 
. 
Capacity 
; 
set 
=> 
this	 
. 
_logs 
. 
Capacity 
= 
value $
;$ %
} 
public 
void 
Clear 
( 
) 
=> 
this 
. 
_logs "
." #
Clear# (
(( )
)) *
;* +
public 
void 
Log 
( 
LogEntry 
e 
) 
{ 
if 
( 
this 

.
 
_logs 
. 
Capacity 
> 
$num 
&&  
this! %
.% &

Preference& 0
.0 1
Filter1 7
(7 8
e8 9
.9 :
Type: >
)> ?
)? @
thisA E
.E F
_logsF K
.K L
AddL O
(O P
eP Q
)Q R
;R S
} 
public 
void 
Error 
( 
string 
msg 
, 
string %
?% &
src' *
=+ ,
null- 1
)1 2
=>3 5
this6 :
.: ;
Log; >
(> ?
LogEntry? G
.G H
ErrorH M
(M N
msgN Q
,Q R
srcS V
)V W
)W X
;X Y
public 
void 
Info 
( 
string 
msg 
, 
string $
?$ %
src& )
=* +
null, 0
)0 1
=>2 4
this5 9
.9 :
Log: =
(= >
LogEntry> F
.F G
InfoG K
(K L
msgL O
,O P
srcQ T
)T U
)U V
;V W
public 
void 
Warn 
( 
string 
msg 
, 
string $
?$ %
src& )
=* +
null, 0
)0 1
=>2 4
this5 9
.9 :
Log: =
(= >
LogEntry> F
.F G
WarnG K
(K L
msgL O
,O P
srcQ T
)T U
)U V
;V W
public   
void   
Debug   
(   
string   
msg   
,   
string   %
?  % &
src  ' *
=  + ,
null  - 1
)  1 2
=>  3 5
this  6 :
.  : ;
Log  ; >
(  > ?
LogEntry  ? G
.  G H
Debug  H M
(  M N
msg  N Q
,  Q R
src  S V
)  V W
)  W X
;  X Y
public!! 
void!! 
	Exception!! 
(!! 
	Exception!!  
e!!! "
,!!" #
string!!$ *
?!!* +
src!!, /
=!!0 1
null!!2 6
)!!6 7
=>!!8 :
this!!; ?
.!!? @
Log!!@ C
(!!C D
LogEntry!!D L
.!!L M
	Exception!!M V
(!!V W
e!!W X
,!!X Y
src!!Z ]
)!!] ^
)!!^ _
;!!_ `
}"" Q
8D:\home\projects\ps-dotenv\Dotenv\MemoryBuffer\MemBuf.cs
	namespace 	
Dotenv
 
. 
MemoryBuffer 
; 
public 
class 
MemBuf 
< 
T 
> 
: 
IEnumerable #
<# $
T$ %
>% &
{' (
public 
MemBuf 
( 
uint 
capacity 
, 
uint "
prealloc# +
=, -
$num. /
)/ 0
{1 2
this 
. 
_cap 
= 
( 
int 
) 
capacity 
; 
this 
. 
buf 

= 
new 
List 
< 
T 
> 
( 
( 
int 
) 
prealloc &
)& '
;' (
} 
private		 
List			 
<		 
T		 
>		 
buf		 
;		 
private

 
int

	 
_cap

 
;

 
private 
int	 
cursor 
= 
$num 
; 
public 
int 
Length 
=> 
this 
. 
buf 
. 
Count $
;$ %
public 
bool 
IsFull 
=> 
this 
. 
_cap  
<=! #
this$ (
.( )
Length) /
;/ 0
private 
int	 
tail 
=> 
this 
. 
IsFull  
?! "
this# '
.' (
cursor( .
:/ 0
$num1 2
;2 3
public 
uint 
Capacity 
{ 
get 
=> 
(	 

uint
 
) 
this 
. 
_cap 
; 
set 
=> 
this	 
. 
SetCapacity 
( 
value 
)  
;  !
} 
public 
T 	
this
 
[ 
int 
index 
] 
{ 
get 
=> 
this	 
. 
buf 
[ 
this 
. 
	realindex  
(  !
index! &
)& '
]' (
;( )
set 
=> 
this	 
. 
buf 
[ 
this 
. 
	realindex  
(  !
index! &
)& '
]' (
=) *
value+ 0
;0 1
} 
private 
int	 
	realindex 
( 
int 
n 
) 
{ 
if 
( 
n 
>= 

this 
. 
Length 
) 
return 
n  
;  !
else 
if 	
(
 
n 
< 
$num 
) 
{ 
n 
+= 
this 
. 
Length 
; 
if 
( 
n 
<	 

$num 
) 
throw 
new $
IndexOutOfRangeException 0
(0 1
$"1 3
$str3 W
{W X
thisX \
.\ ]
Length] c
}c d
$strd ~
{~ 
n	 
}
 
"
 
)
 
;
 
return   	
this  
 
.   
	realindex   
(   
n   
)   
;   
}!! 
else!! 
return!!	 
(!! 
this!! 
.!! 
tail!! 
+!! 
n!! 
)!! 
%!!  !
this!!" &
.!!& '
_cap!!' +
;!!+ ,
}"" 
public$$ 
void$$ 
Add$$ 
($$ 
T$$ 
item$$ 
)$$ 
{$$ 
if%% 
(%% 
this%% 

.%%
 
IsFull%% 
)%% 
this%% 
.%% 
buf%% 
[%% 
this%%  
.%%  !
cursor%%! '
]%%' (
=%%) *
item%%+ /
;%%/ 0
else&& 
this&& 
.&& 
buf&& 
.&& 
Add&& 
(&& 
item&& 
)&& 
;&& 
this'' 
.'' 
cursor'' 
++'' 
;'' 
if(( 
((( 
this(( 

.((
 
cursor(( 
>=(( 
this(( 
.(( 
_cap(( 
)(( 
this((  $
.(($ %
cursor((% +
=((, -
$num((. /
;((/ 0
})) 
public++ 
void++ 
SetCapacity++ 
(++ 
uint++ 
capacity++ &
)++& '
{++( )
int,, 
n,, 
=,, 	
(,,
 
int,, 
),, 
capacity,, 
;,, 
if-- 
(-- 
!-- 
this-- 
.-- 
IsFull-- 
&&-- 
n-- 
>=-- 
this-- 
.--  
Length--  &
)--& '
{--( )
}// 
else// 
if//	 
(// 
!// 
this// 
.// 
IsFull// 
)// 
{// 
int22 
shift22 
=22 
(22 
int22 
)22 
(22 
this22 
.22 
buf22 
.22 
Count22 #
-22$ %
n22& '
)22' (
;22( )
Util33 
.33 
	ShiftLeft33 
(33 
this33 
.33 
buf33 
,33 
shift33 !
)33! "
;33" #
this44 
.44 
cursor44 
=44 
$num44 
;44 
}55 
else55 
if55	 
(55 
this55 
.55 
Length55 
>55 
n55 
)55 
{55 
var77 
temp77 
=77 
new77 
List77 
<77 
T77 
>77 
(77 
(77 
int77 
)77 
n77  
)77  !
;77! "
for88 
(88 
int88 
i88 
=88 
this88 
.88 
Length88 
-88 
n88 
;88  
i88! "
<88# $
this88% )
.88) *
Length88* 0
;880 1
i882 3
++883 5
)885 6
{887 8
temp99 
.99 	
Add99	 
(99 
this99 
[99 
i99 
]99 
)99 
;99 
}:: 
this;; 
.;; 
buf;; 
=;; 
temp;; 
;;; 
this<< 
.<< 
cursor<< 
=<< 
$num<< 
;<< 
}== 
else== 
{==	 

var@@ 
left@@ 
=@@ 
this@@ 
.@@ 
buf@@ 
.@@ 
GetRange@@ 
(@@  
$num@@  !
,@@! "
this@@# '
.@@' (
cursor@@( .
)@@. /
;@@/ 0
thisAA 
.AA 
bufAA 
.AA 
AddRangeAA 
(AA 
leftAA 
)AA 
;AA 
UtilCC 
.CC 
	ShiftLeftCC 
(CC 
thisCC 
.CC 
bufCC 
,CC 
leftCC  
.CC  !
CountCC! &
)CC& '
;CC' (
thisDD 
.DD 
cursorDD 
=DD 
thisDD 
.DD 
LengthDD 
;DD 
}EE 
thisFF 
.FF 
_capFF 
=FF 
(FF 
intFF 
)FF 
nFF 
;FF 
}GG 
publicII 
IEnumeratorII 
<II 
TII 
>II 
GetEnumeratorII $
(II$ %
)II% &
{II' (
forJJ 
(JJ 
intJJ 

iJJ 
=JJ 
$numJJ 
;JJ 
iJJ 
<JJ 
thisJJ 
.JJ 
LengthJJ !
;JJ! "
iJJ# $
++JJ$ &
)JJ& '
{JJ( )
yieldKK 
returnKK	 
thisKK 
[KK 
iKK 
]KK 
;KK 
}LL 
}MM 
SystemOO 
.OO 
CollectionsOO 
.OO 
IEnumeratorOO 
SystemOO  &
.OO& '
CollectionsOO' 2
.OO2 3
IEnumerableOO3 >
.OO> ?
GetEnumeratorOO? L
(OOL M
)OOM N
{OOO P
returnPP 
thisPP	 
.PP 
GetEnumeratorPP 
(PP 
)PP 
;PP 
}QQ 
publicSS 
voidSS 
ClearSS 
(SS 
)SS 
{SS 
thisTT 
.TT 
bufTT 

.TT
 
ClearTT 
(TT 
)TT 
;TT 
thisUU 
.UU 
cursorUU 
=UU 
$numUU 
;UU 
}VV 
publicXX 
voidXX 
AddRangeXX 
(XX 
IEnumerableXX !
<XX! "
TXX" #
>XX# $
itemsXX% *
)XX* +
{XX, -
foreachYY 	
(YY
 
varYY 
xYY 
inYY 
itemsYY 
)YY 
thisYY 
.YY  
AddYY  #
(YY# $
xYY$ %
)YY% &
;YY& '
}ZZ 
}[[ ç

6D:\home\projects\ps-dotenv\Dotenv\MemoryBuffer\Util.cs
	namespace 	
Dotenv
 
. 
MemoryBuffer 
; 
internal 
class	 
Util 
{ 
public 
static 
void 
	ShiftLeft 
< 
T 
>  
(  !
List! %
<% &
T& '
>' (
buf) ,
,, -
int. 1
shift2 7
)7 8
{9 :
if 
( 
shift 
<= 
$num 
) 
return 
; 
for 
( 
int 

i 
= 
shift 
; 
i 
< 
buf 
. 
Count #
;# $
i% &
++& (
)( )
{* +
buf 
[ 
i 
-	 

shift 
] 
= 
buf 
[ 
i 
] 
; 
} 
buf		 
.		 
RemoveRange		 
(		 
buf		 
.		 
Count		 
-		 
shift		 #
,		# $
shift		% *
)		* +
;		+ ,
}

 
} Ó

6D:\home\projects\ps-dotenv\Dotenv\Platform\Platform.cs
	namespace 	
Dotenv
 
. 

OSSpecific 
; 
public 
static 
class 
Platform 
{ 
public 
const 
StringComparison 
StrComparison ,
=- .
StringComparison/ ?
.? @
OrdinalIgnoreCase@ Q
;Q R
public 
static 
StringComparer 
StrComparer )
=* +
StringComparer, :
.: ;
OrdinalIgnoreCase; L
;L M
public 
static 
bool 
EndsInSeparator #
(# $
this$ (
string) /
s0 1
)1 2
{3 4
return 
s	 

.
 
Length 
> 
$num 
&& 
( 
s 
[ 
s 
. 
Length $
-% &
$num' (
]( )
==* ,
$char- 1
||2 4
s5 6
[6 7
s7 8
.8 9
Length9 ?
-@ A
$numB C
]C D
==E G
$charH K
)K L
;L M
} 
} ù
0D:\home\projects\ps-dotenv\Dotenv\Read-Dotenv.cs
	namespace 	
Dotenv
 
; 
[ 
Cmdlet 
( 
VerbsCommunications 
. 
Read  
,  !
$str" *
,* +#
DefaultParameterSetName, C
=D E
$strF L
)L M
]M N
[ 

OutputType 
( 
typeof 
( 
Entry 
) 
) 
] 
public 
class 
ReadDotenvCmd 
: 
PSCmdlet $
{% &
[		 
	Parameter		 
(		 
HelpMessage

 
=

 
$str

 $
,

$ %
	Mandatory 
= 
true 
, 
ParameterSetName 
= 
$str 
, 
Position 

= 
$num 
, +
ValueFromPipelineByPropertyName !
=" #
true$ (
)( )
]) *
public 
string 
? 
Path 
{ 
get 
; 
set 
;  
}! "
[ 
	Parameter 
( 
	Mandatory 

= 
true 
, 
Position 	
=
 
$num 
, 
ParameterSetName 
= 
$str 
, 
HelpMessage 
= 
$str )
,) *
ValueFromPipeline 
= 
true 
, +
ValueFromPipelineByPropertyName  
=! "
true# '
) 
] 
public 
string 
? 
Text 
{ 
get 
; 
set 
;  
}! "
private 
string	 
filepath 
=> 
this  
.  !/
#GetUnresolvedProviderPathFromPSPath! D
(D E
thisE I
.I J
PathJ N
)N O
;O P
private 
string	 
? 
data 
=> 
this 
. 
ParameterSetName .
switch/ 5
{6 7
$str 
=>	 
this 
. 
Text 
, 
_ 
=> 
System 
. 
IO 
. 
File 
. 
ReadAllText !
(! "
this" &
.& '
filepath' /
)/ 0
,0 1
} 
; 
	protected!! 

override!! 
void!! 
ProcessRecord!! &
(!!& '
)!!' (
{!!) *
foreach"" 	
(""
 
var"" 
res"" 
in"" 
new"" 
Parser""  
(""  !
this""! %
.""% &
data""& *
)""* +
)""+ ,
{""- .
if## 
(## 
res## 

.##
 
IsErr## 
)## 
this$$ 
.$$ 	

WriteError$$	 
($$ 
new$$ 
ErrorRecord$$ #
($$# $
res$$$ '
.$$' (
Err$$( +
,$$+ ,
$str$$- @
,$$@ A
ErrorCategory$$B O
.$$O P
ParserError$$P [
,$$[ \
null$$] a
)$$a b
)$$b c
;$$c d
else%% 
this&& 
.&& 	
WriteObject&&	 
(&& 
res&& 
.&& 
Ok&& 
)&& 
;&& 
}'' 
}(( 
})) 
.D:\home\projects\ps-dotenv\Dotenv\Whitelist.cs
	namespace 	
Dotenv
 
; 
internal 
class	 
	Whitelist 
{ 
public 
	Whitelist 
( 
string 
[ 
] 
? 
globs !
=" #
null$ (
)( )
{* +
this 
. 
	_patterns 
= 
new 
( 
Platform 
.  
StrComparer  +
)+ ,
;, -
if		 
(		 
globs		 
is		 
not		 
null		 
)		 
{		 
foreach

 

(

 
var

 
x

 
in

 
globs

 
)

 
this

  
.

  !
Add

! $
(

$ %
x

% &
)

& '
;

' (
} 
} 
private 

Dictionary	 
< 
string 
, 
Glob  
>  !
	_patterns" +
;+ ,
public 
ICollection 
< 
string 
> 
Patterns $
=>% '
this( ,
., -
	_patterns- 6
.6 7
Keys7 ;
;; <
public 
bool 
Add 
( 
string 
pattern 
)  
{! "
if 
( 
this 

.
 
	_patterns 
. 
ContainsKey  
(  !
pattern! (
)( )
)) *
return+ 1
false2 7
;7 8
var 
opts 

= 
new 
GlobOptions 
( 
) 
; 
opts 
. 

Evaluation 
. 
CaseInsensitive !
=" #
true$ (
;( )
this 
. 
	_patterns 
[ 
pattern 
] 
= 
Glob  
.  !
Parse! &
(& '
pattern' .
,. /
opts0 4
)4 5
;5 6
return 
true	 
; 
} 
public 
bool 
AddDir 
( 
string 
dir 
) 
{  !
if   
(   
dir   	
.  	 

EndsInSeparator  
 
(   
)   
)   
return!! 	
this!!
 
.!! 
Add!! 
(!! 
$"!! 
{!! 
dir!! 
}!! 
$str!! 
"!! 
)!! 
;!! 
else"" 
return"" 
this"" 
."" 
Add"" 
("" 
$""" 
{"" 
dir"" 
}"" 
{"" 
Path"" #
.""# $"
DirectorySeparatorChar""$ :
}"": ;
$str""; =
"""= >
)""> ?
;""? @
}## 
public%% 
bool%% 
IsMatch%% 
(%% 
string%% 
path%%  
)%%  !
=>%%" $
this&& 
.&& 
	_patterns&& 
.&& 
Values&& 
.&& 
Any&& 
(&& 
glob&& 
=>&&  "
glob&&# '
.&&' (
IsMatch&&( /
(&&/ 0
path&&0 4
)&&4 5
)&&5 6
;&&6 7
public(( 
bool(( 
Remove(( 
((( 
string(( 
pattern(( "
)((" #
=>(($ &
this((' +
.((+ ,
	_patterns((, 5
.((5 6
Remove((6 <
(((< =
pattern((= D
)((D E
;((E F
})) 